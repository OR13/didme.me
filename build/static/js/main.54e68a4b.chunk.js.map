{"version":3,"sources":["../../bls12381/dist/index.js","../../src/driver.ts","../../src/keyUtils.ts","../../src/ES256K.ts","../../src/Secp256k1KeyPair.ts","serviceWorker.js","store/history.js","store/universal-wallet/actions.js","store/universal-wallet/reducer.js","store/universal-wallet/redux.js","store/universal-wallet/index.js","store/universal-wallet/container.js","store/index.js","components/Theme/Theme.js","pages/base/menu.js","pages/base/drawer.js","pages/base/base.js","pages/home/Home.js","pages/home/index.js","components/VaultWallet.js","components/VaultAdapter.js","pages/workbench/Workbench.js","pages/workbench/index.js","components/ScanQRCodeDialog/ScanQRCodeDialog.js","../../src/resolver.ts","networking/documentLoader.js","pages/pdf/OfflinePDF.js","pages/pdf/index.js","pages/videos/Videos.js","pages/index.js","pages/videos/index.js","components/ParticlesContainer/ParticlesContainer.js","pages/errors/404.js","store/create.js","index.js","../../src/EdDSA.ts","../../src/Ed25519KeyPair.ts","../../src/X25519KeyPair.ts","store/universal-wallet/handlers.js","assets/logo.svg"],"names":["module","exports","require","keyToDidDoc","bls12381Key","did","fingerprint","keyId","id","publicKey","type","controller","publicKeyBase58","bs58","encode","publicKeyBuffer","authentication","assertionMethod","capabilityDelegation","capabilityInvocation","url","TypeError","split","pop","Bls12381G2KeyPair","fromFingerprint","getKid","copy","digest","crypto","canonicalize","base64url","Buffer","privateKeyJwkFromPrivateKeyHex","jwk","keyto","crv","kid","publicKeyJwkFromPublicKeyHex","key","publicKeyHex","keyBin","secp256k1","privateKeyHexFromJwk","publicKeyHexFromJwk","uncompressedPublicKey","compressed","privateKeyUInt8ArrayFromJwk","privateKeyHex","publicKeyUInt8ArrayFromJwk","publicKeyBase58FromPublicKeyHex","privateKeyBase58FromPrivateKeyHex","privateKeyUInt8ArrayFromPrivateKeyBase58","publicKeyUInt8ArrayFromPublicKeyBase58","JWSVerificationFailed","Error","header","alg","b64","crit","privateKeyJwk","privateKeyUInt8Array","encodedHeader","JSON","toBeSignedBuffer","payload","message","messageHashUInt8Array","sigObj","jws","encodedSignature","publicKeyJwk","publicKeyUInt8Array","signatureUInt8Array","encodedPayload","toBeSigned","options","complete","signature","_generate","secureRandom","privateKey","Secp256k1KeyPair","this","pubkeyBytes","buffer","Uint8Array","keyUtils","privateKeyBase58","e","signer","sign","data","verifier","verify","verified","console","addEncodedPublicKey","publicKeyNode","verifyFingerprint","error","valid","fingerprintBuffer","publicNode","_private","secp256k1Key","Boolean","window","location","hostname","match","createBrowserHistory","setUniversalWalletProp","createAction","handleActions","state","name","status","contents","vaultEndpoint","isSyncEnabled","isSyncing","connect","wallet","actions","reducer","container","compose","withRedux","withHandlers","router","connectRouter","history","font1","font2","font3","Theme","children","props","theme","createMuiTheme","splashImage","palette","primary","light","lighten","main","dark","darken","secondary","typography","useNextVariants","fontSize","fontFamily","join","h1","fontWeight","h2","h3","h4","textTransform","letterSpacing","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","overrides","MuiInput","input","MuiInputLabel","root","MuiAppBar","MuiButton","contained","boxShadow","Component","StyledMenu","withStyles","paper","border","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","backgroundColor","color","common","white","MenuItem","CustomizedMenus","React","useState","anchorEl","setAnchorEl","IconButton","aria-controls","aria-haspopup","onClick","event","currentTarget","keepMounted","open","onClose","push","ListItemIcon","ListItemText","DrawerContent","List","ListItem","useStyles","makeStyles","display","width","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","MiniDrawer","classes","useTheme","setOpen","className","CssBaseline","AppBar","position","clsx","Toolbar","aria-label","edge","src","logo","alt","title","style","height","Drawer","variant","direction","Divider","Home","keys","didDocument","setState","useEffect","a","Ed25519KeyPair","generate","randomBytes","ed25519Key","X25519KeyPair","fromEdKeyPair","x25519Key","driver","Grid","item","sm","xs","Typography","gutterBottom","value","stringify","VaultWallet","walletState","image","VaultAdapter","syncVault","Workbench","ScanQRCodeDialog","handleClose","handleSubmit","preventDefault","onSubmit","Dialog","fullScreen","aria-labelledby","DialogTitle","DialogContent","delay","resolution","onError","onScan","context","AudioContext","freq","vol","oscillator","createOscillator","gain","createGain","frequency","destination","start","currentTime","stop","beep","DialogActions","Button","resolver","encodedType","idchar","maybeCached","localStorage","getItem","log","contextUrl","document","parse","documentUrl","indexOf","setItem","jsonld","documentLoader","res","vcjs","Ed25519Signature2018","suites","defaultVc","issuer","issuanceDate","Date","toISOString","credentialSubject","qrOptions","ecLevel","fgColor","size","hideLogo","orientation","unit","format","generatePrivateKey","edKey","OfflinePDF","isScanQrCodeDialogOpen","vc","panel0","panel1","panel2","panel3","panelValues","setPanelValues","handleChangePanels","panel","renderVC","proof","filename","x","y","toPdf","targetRef","Fragment","textAlign","margin","ref","ExpansionPanel","expanded","onChange","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","flexDirection","marginBottom","setTimeout","terrible","suite","credential","result","from","doc","key1","md","jsonObject","renderVerify","disabled","issue","signed","PdfDemo","Videos","marginTop","frameborder","allow","allowfullscreen","routes","path","exact","component","ParticlesContainer","params","particles","line_linked","shadow","enable","blur","top","NotFound","pathname","href","appReducers","persistConfig","whitelist","storage","middlewares","thunk","routerMiddleware","store","createStore","persistReducer","combineReducers","rootReducer","composeWithDevTools","applyMiddleware","withReduxEnhancer","persistor","persistStore","ReactDOM","render","map","getElementById","navigator","serviceWorker","ready","then","registration","unregister","_jwkToSecretKey","d","_jwkToPublicKey","decode","secretKey","ed25519","signDetached","verifyDetached","publicKeyJwkFromPublicKeyBase58","kty","privateKeyJwkFromPrivateKeyBase58","privateKeyBuf","publicKeyBase58FromPublicKeyJwk","privateKeyBase58FromPrivateKeyJwk","publicKeyHexFromPublicKeyBase58","privateKeyHexFromPrivateKeyBase58","isAvailable","toX25519KeyPair","x25519","keyAgreement","publicKeyBytes","privateKeyBytes","_jwk","ed25519KeyPair","convertPublicKeyToX25519","convertSecretKeyToX25519","deriveSecret","remotePubkeyBytes","getClient","_wallet","UniversalWallet2020","entropy","find","c","VaultClient","fromDerivedContents","client","isContentPersisted","localContents","undefined","generateWallet","_seed","toggleLockStatus","password","unlock","lock","deleteWallet","importWallet","encryptedWallet","import","exportWallet","export","saveWallet","issueCredential","verifiableCredential","proveVerifiableCredential","prove","verifiablePresentation","getWalletContents","tableData","EdvClient","generateId","schema","addWalletContent"],"mappings":"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","file":"static/js/main.54e68a4b.chunk.js","sourcesContent":["\n'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./did-key-bls12381.cjs.production.min.js')\n} else {\n  module.exports = require('./did-key-bls12381.cjs.development.js')\n}\n","import { X25519KeyPair } from './X25519KeyPair';\n\nexport const keyToDidDoc = (x25519Key: any) => {\n  const did = `did:key:${x25519Key.fingerprint()}`;\n  const keyId = `#${x25519Key.fingerprint()}`;\n  return {\n    '@context': [\n      'https://www.w3.org/ns/did/v1',\n      {\n        '@base': did,\n      },\n    ],\n    id: did,\n    keyAgreement: [\n      {\n        id: keyId,\n        type: x25519Key.type,\n        controller: did,\n        publicKeyBase58: x25519Key.publicKeyBase58,\n      },\n    ],\n  };\n};\n\nexport const get = async ({ did, url }: any = {}) => {\n  did = did || url;\n  if (!did) {\n    throw new TypeError('\"did\" must be a string.');\n  }\n  const fingerprint = did\n    .split('#')[0]\n    .split('did:key:')\n    .pop();\n  const publicKey = await X25519KeyPair.fromFingerprint({ fingerprint });\n  const didDoc = keyToDidDoc(publicKey);\n  return didDoc;\n};\n","import bs58 from 'bs58';\nimport base64url from 'base64url';\nimport crypto from 'crypto';\nimport canonicalize from 'canonicalize';\n\nexport const getKid = (jwk: any) => {\n  const copy = { ...jwk } as any;\n  delete copy.d;\n  delete copy.kid;\n  delete copy.alg;\n  const digest = crypto\n    .createHash('sha256')\n    .update(canonicalize(copy))\n    .digest();\n  return base64url.encode(Buffer.from(digest));\n};\n\nexport const privateKeyJwkFromPrivateKeyBase58 = (\n  publicKeyBase58: string,\n  privateKeybase58: string\n) => {\n  const publicKeyBytes = bs58.decode(publicKeyBase58);\n  const privateKeyBytes = bs58.decode(privateKeybase58);\n  const _jwk = {\n    kty: 'OKP',\n    crv: 'X25519',\n    d: base64url.encode(privateKeyBytes),\n    x: base64url.encode(publicKeyBytes),\n  };\n  const kid = getKid(_jwk);\n  return {\n    ..._jwk,\n    kid,\n  };\n};\n\nexport const publicKeyJwkFromPublicKeyBase58 = (publicKeyBase58: string) => {\n  const _jwk = {\n    kty: 'OKP',\n    crv: 'X25519',\n    x: base64url.encode(bs58.decode(publicKeyBase58)),\n  };\n  const kid = getKid(_jwk);\n  return {\n    ..._jwk,\n    kid,\n  };\n};\n\nexport const privateKeyHexFromPrivateKeyBase58 = (privateKeyBase58: string) => {\n  return Buffer.from(bs58.decode(privateKeyBase58)).toString('hex');\n};\n\nexport const publicKeyHexFromPublicKeyBase58 = (publicKeyBase58: string) => {\n  return Buffer.from(bs58.decode(publicKeyBase58)).toString('hex');\n};\n\nexport const privateKeyBase58FromPrivateKeyJwk = (jwk: any) => {\n  return bs58.encode(base64url.toBuffer(jwk.d));\n};\n\nexport const publicKeyBase58FromPublicKeyJwk = (jwk: any) => {\n  return bs58.encode(base64url.toBuffer(jwk.x));\n};\n\nexport const privateKeyBase58FromPrivateKeyHex = (privateKeyHex: string) => {\n  return bs58.encode(Buffer.from(privateKeyHex, 'hex'));\n};\n\nexport const publicKeyBase58FromPublicKeyHex = (publicKeyHex: string) => {\n  return bs58.encode(Buffer.from(publicKeyHex, 'hex'));\n};\n","import base64url from 'base64url';\n\nimport crypto from 'crypto';\nimport secp256k1 from 'secp256k1';\n\nimport {\n  ISecp256k1PrivateKeyJwk,\n  ISecp256k1PublicKeyJwk,\n  privateKeyUInt8ArrayFromJwk,\n  publicKeyUInt8ArrayFromJwk,\n} from './keyUtils';\n\n/** error matching @panva/jose for JWS verification failure. */\nclass JWSVerificationFailed extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'JWSVerificationFailed';\n  }\n}\n\n/** JWS Header */\nexport interface IJWSHeader {\n  /** algorithm, ES256K */\n  alg: string;\n\n  /** type, JWT */\n  typ?: string;\n  /** signing key id, ... */\n  kid?: string;\n}\n\n/** Produce a JWS Unencoded Payload per https://tools.ietf.org/html/rfc7797#section-6 */\nexport const signDetached = async (\n  // in the case of EcdsaSecp256k1Signature2019 this is the result of createVerifyData\n  payload: Buffer,\n  privateKeyJwk: ISecp256k1PrivateKeyJwk,\n  header = {\n    alg: 'ES256K',\n    b64: false,\n    crit: ['b64'],\n  }\n) => {\n  const privateKeyUInt8Array = await privateKeyUInt8ArrayFromJwk(privateKeyJwk);\n\n  const encodedHeader = base64url.encode(JSON.stringify(header));\n\n  const toBeSignedBuffer = Buffer.concat([\n    Buffer.from(encodedHeader + '.', 'utf8'),\n    Buffer.from(payload.buffer, payload.byteOffset, payload.length),\n  ]);\n\n  const message = Buffer.from(toBeSignedBuffer);\n\n  const digest = crypto\n    .createHash('sha256')\n    .update(message)\n    .digest();\n\n  const messageHashUInt8Array = digest;\n  const sigObj: any = secp256k1.ecdsaSign(\n    messageHashUInt8Array,\n    privateKeyUInt8Array\n  );\n\n  const encodedSignature = base64url.encode(Buffer.from(sigObj.signature));\n\n  return `${encodedHeader}..${encodedSignature}`;\n};\n\n/** Verify a JWS Unencoded Payload per https://tools.ietf.org/html/rfc7797#section-6 */\nexport const verifyDetached = async (\n  jws: string,\n  payload: Buffer,\n  publicKeyJwk: ISecp256k1PublicKeyJwk\n) => {\n  if (jws.indexOf('..') === -1) {\n    throw new JWSVerificationFailed('not a valid rfc7797 jws.');\n  }\n  const [encodedHeader, encodedSignature] = jws.split('..');\n  const header = JSON.parse(base64url.decode(encodedHeader));\n  if (header.alg !== 'ES256K') {\n    throw new Error('JWS alg is not signed with ES256K.');\n  }\n  if (\n    header.b64 !== false ||\n    !header.crit ||\n    !header.crit.length ||\n    header.crit[0] !== 'b64'\n  ) {\n    throw new Error('JWS Header is not in rfc7797 format (not detached).');\n  }\n  const publicKeyUInt8Array = await publicKeyUInt8ArrayFromJwk(publicKeyJwk);\n  const toBeSignedBuffer = Buffer.concat([\n    Buffer.from(encodedHeader + '.', 'utf8'),\n    Buffer.from(payload.buffer, payload.byteOffset, payload.length),\n  ]);\n  const message = Buffer.from(toBeSignedBuffer);\n  const digest = crypto\n    .createHash('sha256')\n    .update(message)\n    .digest();\n\n  const messageHashUInt8Array = digest;\n  const signatureUInt8Array = base64url.toBuffer(encodedSignature);\n  const verified = secp256k1.ecdsaVerify(\n    signatureUInt8Array,\n    messageHashUInt8Array,\n    publicKeyUInt8Array\n  );\n  if (verified) {\n    return true;\n  }\n  throw new Error('Cannot verify detached signature.');\n};\n\n/** Produce a normal ES256K JWS */\nexport const sign = async (\n  payload: any,\n  privateKeyJwk: ISecp256k1PrivateKeyJwk,\n  header: IJWSHeader = { alg: 'ES256K' }\n) => {\n  const privateKeyUInt8Array = await privateKeyUInt8ArrayFromJwk(privateKeyJwk);\n\n  const encodedHeader = base64url.encode(JSON.stringify(header));\n  const encodedPayload = base64url.encode(JSON.stringify(payload));\n  const toBeSigned = `${encodedHeader}.${encodedPayload}`;\n  const message = Buffer.from(toBeSigned);\n\n  const digest = crypto\n    .createHash('sha256')\n    .update(message)\n    .digest();\n\n  const messageHashUInt8Array = digest;\n\n  const sigObj: any = secp256k1.ecdsaSign(\n    messageHashUInt8Array,\n    privateKeyUInt8Array\n  );\n\n  const encodedSignature = base64url.encode(sigObj.signature);\n  return `${encodedHeader}.${encodedPayload}.${encodedSignature}`;\n};\n\n/** Verify an ES256K JWS, returns the decoded object if successful, throws otherwise. */\nexport const verify = async (\n  jws: string,\n  publicKeyJwk: ISecp256k1PublicKeyJwk\n) => {\n  const publicKeyUInt8Array = await publicKeyUInt8ArrayFromJwk(publicKeyJwk);\n  const [encodedHeader, encodedPayload, encodedSignature] = jws.split('.');\n  const toBeSigned = `${encodedHeader}.${encodedPayload}`;\n\n  const message = Buffer.from(toBeSigned);\n  const digest = crypto\n    .createHash('sha256')\n    .update(message)\n    .digest();\n\n  const messageHashUInt8Array = digest;\n\n  const signatureUInt8Array = base64url.toBuffer(encodedSignature);\n\n  const verified = secp256k1.ecdsaVerify(\n    signatureUInt8Array,\n    messageHashUInt8Array,\n    publicKeyUInt8Array\n  );\n  if (verified) {\n    return JSON.parse(base64url.decode(encodedPayload));\n  }\n  throw new JWSVerificationFailed('signature verification failed');\n};\n\n/** decode a JWS (without verifying it) */\nexport const decode = (jws: string, options = { complete: false }) => {\n  const [encodedHeader, encodedPayload, encodedSignature] = jws.split('.');\n\n  if (options.complete) {\n    return {\n      header: JSON.parse(base64url.decode(encodedHeader)),\n      payload: JSON.parse(base64url.decode(encodedPayload)),\n      signature: encodedSignature,\n    };\n  }\n  return JSON.parse(base64url.decode(encodedPayload));\n};\n","import crypto from 'crypto';\n\nimport * as keyUtils from './keyUtils';\nimport bs58 from 'bs58';\nimport secp256k1 from 'secp256k1';\n\nconst _generate = (secureRandom: any) => {\n  let privateKey;\n  do {\n    privateKey = secureRandom();\n  } while (!secp256k1.privateKeyVerify(privateKey));\n\n  const publicKey = secp256k1.publicKeyCreate(privateKey);\n  return { publicKey, privateKey };\n};\n\nexport class Secp256k1KeyPair {\n  public id: string;\n  public type: string;\n  public controller: string;\n\n  public publicKeyBase58: string;\n  public privateKeyBase58: string;\n\n  static fingerprintFromPublicKey({ publicKeyBase58 }: any) {\n    const pubkeyBytes = bs58.decode(publicKeyBase58);\n    const buffer = new Uint8Array(2 + pubkeyBytes.length);\n    // See https://github.com/multiformats/multicodec/blob/master/table.csv\n    // 0xe7 is Secp256k1 public key\n    buffer[0] = 0xe7; //\n    buffer[1] = 0x01;\n    buffer.set(pubkeyBytes, 2);\n    // prefix with `z` to indicate multi-base base58btc encoding\n    return `z${bs58.encode(buffer)}`;\n  }\n\n  static async generate(options: any = {}) {\n    let privateKey;\n    let publicKey;\n    if (options.secureRandom) {\n      ({ privateKey, publicKey } = _generate(options.secureRandom));\n    }\n    if (options.seed) {\n      ({ privateKey, publicKey } = _generate(() => {\n        return new Uint8Array(options.seed);\n      }));\n    }\n    if (!privateKey) {\n      throw new Error('Cannot generate private key.');\n    }\n\n    const publicKeyBase58 = keyUtils.publicKeyBase58FromPublicKeyHex(\n      Buffer.from(publicKey).toString('hex')\n    );\n    const privateKeyBase58 = keyUtils.privateKeyBase58FromPrivateKeyHex(\n      Buffer.from(privateKey).toString('hex')\n    );\n\n    const did = `did:key:${Secp256k1KeyPair.fingerprintFromPublicKey({\n      publicKeyBase58,\n    })}`;\n    const keyId = `#${Secp256k1KeyPair.fingerprintFromPublicKey({\n      publicKeyBase58,\n    })}`;\n\n    return new Secp256k1KeyPair({\n      id: keyId,\n      controller: did,\n      publicKeyBase58,\n      privateKeyBase58,\n    });\n  }\n\n  static async from(options: any) {\n    let privateKeyBase58 = options.privateKeyBase58;\n    let publicKeyBase58 = options.publicKeyBase58;\n\n    if (options.privateKeyHex) {\n      privateKeyBase58 = await keyUtils.privateKeyBase58FromPrivateKeyHex(\n        options.privateKeyHex\n      );\n    }\n\n    if (options.publicKeyHex) {\n      publicKeyBase58 = await keyUtils.publicKeyBase58FromPublicKeyHex(\n        options.publicKeyHex\n      );\n    }\n\n    if (options.privateKeyJwk) {\n      privateKeyBase58 = keyUtils.privateKeyBase58FromPrivateKeyHex(\n        await keyUtils.privateKeyHexFromJwk(options.privateKeyJwk)\n      );\n    }\n\n    if (options.publicKeyJwk) {\n      publicKeyBase58 = keyUtils.privateKeyBase58FromPrivateKeyHex(\n        await keyUtils.publicKeyHexFromJwk(options.publicKeyJwk)\n      );\n    }\n\n    return new Secp256k1KeyPair({\n      ...options,\n      privateKeyBase58,\n      publicKeyBase58,\n    });\n  }\n\n  static fromFingerprint({ fingerprint }: any) {\n    // skip leading `z` that indicates base58 encoding\n    const buffer = bs58.decode(fingerprint.substr(1));\n\n    // https://github.com/multiformats/multicodec/blob/master/table.csv#L77\n    if (buffer[0] === 0xe7 && buffer[1] === 0x01) {\n      const publicKeyBase58 = bs58.encode(buffer.slice(2));\n      const did = `did:key:${Secp256k1KeyPair.fingerprintFromPublicKey({\n        publicKeyBase58,\n      })}`;\n      const keyId = `#${Secp256k1KeyPair.fingerprintFromPublicKey({\n        publicKeyBase58,\n      })}`;\n      return new Secp256k1KeyPair({\n        id: keyId,\n        controller: did,\n        publicKeyBase58,\n      });\n    }\n\n    throw new Error(`Unsupported Fingerprint Type: ${fingerprint}`);\n  }\n\n  constructor(options: any = {}) {\n    this.type = 'EcdsaSecp256k1VerificationKey2019';\n\n    this.id = options.id;\n    this.controller = options.controller;\n    this.privateKeyBase58 = options.privateKeyBase58;\n    this.publicKeyBase58 = options.publicKeyBase58;\n  }\n\n  get publicKey() {\n    return this.publicKeyBase58;\n  }\n\n  get privateKey() {\n    return this.privateKeyBase58;\n  }\n\n  signer() {\n    if (!this.privateKeyBase58) {\n      return {\n        async sign() {\n          throw new Error('No private key to sign with.');\n        },\n      };\n    }\n    let privateKeyBase58 = this.privateKeyBase58;\n    return {\n      async sign({ data }: any) {\n        const messageHashUInt8Array = crypto\n          .createHash('sha256')\n          .update(data)\n          .digest();\n        const privateKeyUInt8Array = await keyUtils.privateKeyUInt8ArrayFromPrivateKeyBase58(\n          privateKeyBase58\n        );\n        const sigObj: any = secp256k1.ecdsaSign(\n          messageHashUInt8Array,\n          privateKeyUInt8Array\n        );\n\n        return sigObj.signature;\n      },\n    };\n  }\n\n  verifier() {\n    if (!this.publicKeyBase58) {\n      return {\n        async sign() {\n          throw new Error('No public key to verify with.');\n        },\n      };\n    }\n    let publicKeyBase58 = this.publicKeyBase58;\n    return {\n      async verify({ data, signature }: any) {\n        const messageHashUInt8Array = crypto\n          .createHash('sha256')\n          .update(data)\n          .digest();\n\n        const publicKeyUInt8Array = await keyUtils.publicKeyUInt8ArrayFromPublicKeyBase58(\n          publicKeyBase58\n        );\n\n        let verified = false;\n        try {\n          verified = secp256k1.ecdsaVerify(\n            signature,\n            messageHashUInt8Array,\n            publicKeyUInt8Array\n          );\n        } catch (e) {\n          console.error('An error occurred when verifying signature: ', e);\n        }\n        return verified;\n      },\n    };\n  }\n\n  addEncodedPublicKey(publicKeyNode: any) {\n    publicKeyNode.publicKeyBase58 = this.publicKeyBase58;\n    return publicKeyNode;\n  }\n\n  fingerprint() {\n    const { publicKeyBase58 } = this;\n    return Secp256k1KeyPair.fingerprintFromPublicKey({ publicKeyBase58 });\n  }\n\n  verifyFingerprint(fingerprint: string) {\n    // fingerprint should have `z` prefix indicating\n    // that it's multi-base encoded\n    if (!(typeof fingerprint === 'string' && fingerprint[0] === 'z')) {\n      return {\n        error: new Error('`fingerprint` must be a multibase encoded string.'),\n        valid: false,\n      };\n    }\n    let fingerprintBuffer;\n    try {\n      fingerprintBuffer = bs58.decode(fingerprint.slice(1));\n    } catch (e) {\n      return { error: e, valid: false };\n    }\n    let publicKeyBuffer;\n    try {\n      publicKeyBuffer = bs58.decode(this.publicKeyBase58);\n    } catch (e) {\n      return { error: e, valid: false };\n    }\n\n    // validate the first two multicodec bytes 0xe701\n    const valid =\n      fingerprintBuffer.slice(0, 2).toString('hex') === 'e701' &&\n      publicKeyBuffer.equals(fingerprintBuffer.slice(2));\n    if (!valid) {\n      return {\n        error: new Error('The fingerprint does not match the public key.'),\n        valid: false,\n      };\n    }\n    return { valid };\n  }\n\n  publicNode({ controller = this.controller } = {}) {\n    const publicNode: any = {\n      id: this.id,\n      type: this.type,\n    };\n    if (controller) {\n      publicNode.controller = controller;\n    }\n    this.addEncodedPublicKey(publicNode); // Subclass-specific\n    return publicNode;\n  }\n\n  async toJwk(_private: boolean = false) {\n    if (_private) {\n      return keyUtils.privateKeyJwkFromPrivateKeyHex(\n        bs58.decode(this.privateKeyBase58).toString('hex')\n      );\n    }\n    return keyUtils.publicKeyJwkFromPublicKeyHex(\n      bs58.decode(this.publicKeyBase58).toString('hex')\n    );\n  }\n\n  async toHex(_private: boolean = false) {\n    if (_private) {\n      return keyUtils.privateKeyHexFromJwk(\n        await keyUtils.privateKeyJwkFromPrivateKeyHex(\n          bs58.decode(this.privateKeyBase58).toString('hex')\n        )\n      );\n    }\n    return keyUtils.publicKeyHexFromJwk(\n      await keyUtils.publicKeyJwkFromPublicKeyHex(\n        bs58.decode(this.publicKeyBase58).toString('hex')\n      )\n    );\n  }\n}\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","import { createAction } from 'redux-actions';\n\nexport const setUniversalWalletProp = createAction(\n  'universal-wallet/SET_UNIVERSAL_WALLET_PROP',\n  (payload) => payload\n);\n","import { handleActions } from \"redux-actions\";\nimport { setUniversalWalletProp } from \"./actions\";\n\nconst initialState = {\n  name: \"UniversalWallet2020\",\n  status: \"UNLOCKED\",\n  contents: [],\n  vaultEndpoint: \"https://edv.did.ai/edvs\",\n  isSyncEnabled: true,\n  isSyncing: false,\n};\n\nexport default handleActions(\n  {\n    [setUniversalWalletProp]: (state, { payload }) => ({\n      ...state,\n      ...payload,\n    }),\n  },\n  initialState\n);\n","import { connect } from 'react-redux';\nimport * as actions from './actions';\n\nexport default connect(({ wallet }) => ({ wallet }), { ...actions });\n","import reducer from './reducer';\nimport container from './container';\n\nexport default {\n  reducer,\n  container,\n};\n","import { compose } from 'recompose';\nimport withRedux from './redux';\nimport withHandlers from './handlers';\n\nexport default compose(withRedux, withHandlers);\n","import { connectRouter } from \"connected-react-router\";\n\nimport history from \"./history\";\n\nimport wallet from \"./universal-wallet\";\n\nexport default {\n  router: connectRouter(history),\n  wallet: wallet.reducer,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nimport { darken, lighten } from '@material-ui/core/styles/colorManipulator';\n\nconst primaryColor = '#594aa8';\nconst secondaryColor = '#fcb373';\n\nconst font1 = '\"Rajdhani\"';\nconst font2 = '\"Roboto Condensed\"';\nconst font3 = '\"Lato\"';\n\nconst fontWeightLight = 300;\nconst fontWeightRegular = 400;\nconst fontWeightMedium = 600;\n\nclass Theme extends Component {\n  render() {\n    const { children } = this.props;\n    const theme = createMuiTheme({\n      splashImage: '',\n      palette: {\n        type: 'light',\n        primary: {\n          light: lighten(primaryColor, 0.07),\n          main: primaryColor,\n          dark: darken(primaryColor, 0.07),\n        },\n        secondary: {\n          light: lighten(secondaryColor, 0.07),\n          main: secondaryColor,\n          dark: darken(secondaryColor, 0.07),\n        },\n      },\n      typography: {\n        useNextVariants: true,\n        fontSize: 16,\n        fontFamily: [font1, font2, font3].join(','),\n        h1: {\n          fontFamily: font1,\n          fontWeight: fontWeightMedium,\n        },\n        h2: {\n          fontFamily: font1,\n          fontWeight: fontWeightMedium,\n        },\n        h3: {\n          fontFamily: font1,\n          fontWeight: fontWeightMedium,\n        },\n        h4: {\n          fontFamily: font2,\n          textTransform: 'uppercase',\n          letterSpacing: '0.1em',\n          fontWeight: fontWeightRegular,\n        },\n        h5: {\n          fontFamily: font2,\n          textTransform: 'uppercase',\n          letterSpacing: '0.1em',\n          fontWeight: fontWeightRegular,\n        },\n        h6: {\n          fontFamily: font2,\n          textTransform: 'uppercase',\n          letterSpacing: '0.05em',\n          fontWeight: fontWeightRegular,\n        },\n        subtitle1: {\n          fontFamily: font1,\n          fontWeight: fontWeightRegular,\n        },\n        subtitle2: {\n          fontFamily: font2,\n          fontWeight: fontWeightRegular,\n        },\n        body1: {\n          fontFamily: font3,\n          fontWeight: fontWeightRegular,\n        },\n        body2: {\n          fontFamily: font3,\n          fontWeight: fontWeightRegular,\n        },\n        button: {\n          fontFamily: font2,\n          fontWeight: fontWeightRegular,\n        },\n        caption: {\n          fontFamily: font2,\n          fontWeight: fontWeightRegular,\n        },\n        overline: {\n          fontFamily: font2,\n          letterSpacing: '0.15em',\n          textTransform: 'uppercase',\n          fontWeight: fontWeightLight,\n        },\n      },\n\n      overrides: {\n        MuiInput: {\n          // Name of the component ⚛️ / style sheet\n          input: {\n            fontFamily: font3,\n          },\n        },\n        MuiInputLabel: {\n          // Name of the component ⚛️ / style sheet\n          root: {\n            fontFamily: font2,\n          },\n        },\n        MuiAppBar: {\n          root: {\n            // boxShadow: 'none',\n          },\n        },\n        MuiButton: {\n          // Name of the rule\n          contained: {\n            boxShadow: 'none',\n          },\n        },\n      },\n    });\n    return <MuiThemeProvider theme={theme}>{children}</MuiThemeProvider>;\n  }\n}\n\nTheme.propTypes = {\n  children: PropTypes.any.isRequired,\n};\n\nexport default Theme;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport HomeIcon from \"@material-ui/icons/Home\";\n\nimport history from \"../../store/history\";\n\nconst StyledMenu = withStyles({\n  paper: {\n    border: \"1px solid #d3d4d5\",\n  },\n})((props) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: \"bottom\",\n      horizontal: \"center\",\n    }}\n    transformOrigin={{\n      vertical: \"top\",\n      horizontal: \"center\",\n    }}\n    {...props}\n  />\n));\n\nconst StyledMenuItem = withStyles((theme) => ({\n  root: {\n    \"&:focus\": {\n      backgroundColor: theme.palette.primary.main,\n      \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\n        color: theme.palette.common.white,\n      },\n    },\n  },\n}))(MenuItem);\n\nexport default function CustomizedMenus() {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <IconButton\n        color={\"inherit\"}\n        aria-controls=\"customized-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        <MoreVertIcon />\n      </IconButton>\n      <StyledMenu\n        id=\"customized-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <StyledMenuItem\n          onClick={() => {\n            history.push(\"/workbench\");\n          }}\n        >\n          <ListItemIcon>\n            <HomeIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Workbench\" />\n        </StyledMenuItem>\n      </StyledMenu>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport HttpIcon from \"@material-ui/icons/Http\";\nimport CodeIcon from \"@material-ui/icons/Code\";\nimport GavelIcon from \"@material-ui/icons/Gavel\";\nimport BuildIcon from \"@material-ui/icons/Build\";\nimport PictureAsPdfIcon from \"@material-ui/icons/PictureAsPdf\";\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\nimport history from \"../../store/history\";\n\nexport default function DrawerContent() {\n  return (\n    <List>\n      <ListItem\n        button\n        onClick={() => {\n          history.push(\"/\");\n        }}\n      >\n        <ListItemIcon>\n          <HomeIcon />\n        </ListItemIcon>\n        <ListItemText primary={\"Home\"} />\n      </ListItem>\n\n      <ListItem\n        button\n        onClick={() => {\n          history.push(\"/workbench\");\n        }}\n      >\n        <ListItemIcon>\n          <BuildIcon />\n        </ListItemIcon>\n        <ListItemText primary={\"Workbench\"} />\n      </ListItem>\n\n      <ListItem\n        button\n        onClick={() => {\n          history.push(\"/offline\");\n        }}\n      >\n        <ListItemIcon>\n          <PictureAsPdfIcon />\n        </ListItemIcon>\n        <ListItemText primary={\"PDF Demo\"} />\n      </ListItem>\n\n      <ListItem\n        button\n        onClick={() => {\n          history.push(\"/videos\");\n        }}\n      >\n        <ListItemIcon>\n          <YouTubeIcon />\n        </ListItemIcon>\n        <ListItemText primary={\"Videos\"} />\n      </ListItem>\n\n      <ListItem\n        button\n        onClick={() => {\n          window.open(\"https://w3c-ccg.github.io/did-method-key/\");\n        }}\n      >\n        <ListItemIcon>\n          <GavelIcon />\n        </ListItemIcon>\n        <ListItemText primary={\"Spec\"} />\n      </ListItem>\n\n      <ListItem\n        button\n        onClick={() => {\n          window.open(\"https://did-key.web.app/api/docs\");\n        }}\n      >\n        <ListItemIcon>\n          <HttpIcon />\n        </ListItemIcon>\n        <ListItemText primary={\"API\"} />\n      </ListItem>\n\n      <ListItem\n        button\n        onClick={() => {\n          window.open(\"https://github.com/transmute-industries/did-key.js\");\n        }}\n      >\n        <ListItemIcon>\n          <CodeIcon />\n        </ListItemIcon>\n        <ListItemText primary={\"Code\"} />\n      </ListItem>\n    </List>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nimport Theme from '../../components/Theme/Theme';\nimport logo from '../../assets/logo.svg';\n\nimport Menu from './menu';\nimport DrawerContent from './drawer';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    width: '100%',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function MiniDrawer({ children }) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Theme>\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"fixed\"\n          className={clsx(classes.appBar, {\n            [classes.appBarShift]: open,\n          })}\n        >\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, {\n                [classes.hide]: open,\n              })}\n            >\n              <MenuIcon />\n            </IconButton>\n            <img\n              src={logo}\n              alt={'logo'}\n              className={classes.title}\n              style={{ height: '28px' }}\n            />\n            <div style={{ flexGrow: 1 }}></div>\n            <Menu />\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          variant=\"permanent\"\n          className={clsx(classes.drawer, {\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          })}\n          classes={{\n            paper: clsx({\n              [classes.drawerOpen]: open,\n              [classes.drawerClose]: !open,\n            }),\n          }}\n        >\n          <div className={classes.toolbar}>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === 'rtl' ? (\n                <ChevronRightIcon />\n              ) : (\n                <ChevronLeftIcon />\n              )}\n            </IconButton>\n          </div>\n          <Divider />\n          <DrawerContent />\n        </Drawer>\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          {children}\n        </main>\n      </div>\n    </Theme>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport crypto from \"crypto\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Base from \"../base/base\";\n\nimport { Ed25519KeyPair, driver } from \"@transmute/did-key-ed25519\";\nimport { X25519KeyPair } from \"@transmute/did-key-x25519\";\nimport { DIDDocumentPreview, JSONEditor } from \"@transmute/material-did-core\";\n\nexport const Home = (props) => {\n  const [state, setState] = React.useState({\n    keys: null,\n    didDocument: null,\n  });\n  React.useEffect(() => {\n    if (state.keys === null) {\n      (async () => {\n        const ed25519Key = await Ed25519KeyPair.generate({\n          secureRandom: () => {\n            return crypto.randomBytes(32);\n          },\n        });\n        const x25519Key = await X25519KeyPair.fromEdKeyPair(ed25519Key);\n        const didDocument = driver.keyToDidDoc(ed25519Key);\n        setState((state) => {\n          return {\n            ...state,\n            keys: { ed25519Key, x25519Key },\n            didDocument,\n          };\n        });\n      })();\n    }\n  });\n  if (!props.wallet) {\n    return <div>loading...</div>;\n  }\n  return (\n    <Base>\n      <Grid container spacing={4}>\n        {state.didDocument !== null && (\n          <Grid item sm={12} xs={12}>\n            <Typography variant={\"h6\"} gutterBottom>\n              DID Document\n            </Typography>\n            <DIDDocumentPreview didDocument={state.didDocument} />\n          </Grid>\n        )}\n        <Grid item sm={12} xs={12}>\n          <Typography variant={\"h6\"} gutterBottom>\n            Key\n          </Typography>\n          <JSONEditor value={JSON.stringify(state.keys, null, 2)} />\n        </Grid>\n      </Grid>\n    </Base>\n  );\n};\n\nHome.propTypes = {\n  wallet: PropTypes.any,\n};\n","import React from \"react\";\nimport { Home as Page } from \"./Home\";\n\nimport { compose } from \"redux\";\n\nimport wallet from \"../../store/universal-wallet\";\n\nconst container = compose(wallet.container);\n\nexport const Home = container((props) => {\n  return <Page {...props} />;\n});\n","import React from 'react';\n\nimport { UniversalWallet } from '@transmute/material-did-core';\n\nconst image =\n  'https://www.transmute.industries/svg/Logo-Transmute-icon-Purp.svg';\n\nexport const VaultWallet = (props) => {\n  return (\n    <div>\n      <UniversalWallet walletState={props.wallet} image={image} {...props} />\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { DataVault } from '@transmute/material-did-core';\n\nexport const VaultAdapter = ({ wallet, syncVault }) => {\n  return (\n    <div>\n      <DataVault {...wallet} syncVault={syncVault} />\n    </div>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Grid from '@material-ui/core/Grid';\nimport Base from '../base/base';\n\nimport { VaultWallet } from '../../components/VaultWallet';\nimport { VaultAdapter } from '../../components/VaultAdapter';\n\nexport const Workbench = (props) => {\n  if (!props.wallet) {\n    return <div>loading...</div>;\n  }\n  return (\n    <Base>\n      <Grid container spacing={4}>\n        <Grid item>\n          <VaultWallet {...props} />\n        </Grid>\n        <Grid item>\n          <VaultAdapter {...props} />\n        </Grid>\n      </Grid>\n    </Base>\n  );\n};\n\nWorkbench.propTypes = {\n  wallet: PropTypes.any,\n};\n","import React from 'react';\nimport { Workbench as Page } from './Workbench';\n\nimport { compose } from 'redux';\n\nimport wallet from '../../store/universal-wallet';\n\nconst container = compose(wallet.container);\n\nexport const Workbench = container((props) => {\n  return <Page {...props} />;\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Button from \"@material-ui/core/Button\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n// import Typography from '@material-ui/core/Typography';\n\nimport QrReader from \"react-qr-reader\";\nimport { JSONEditor } from \"@transmute/material-did-core\";\nexport class ScanQRCodeDialog extends React.Component {\n  state = {\n    data: \"\",\n  };\n\n  handleClose = () => {\n    this.props.onClose();\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.data);\n  };\n\n  render() {\n    return (\n      <div>\n        <Dialog\n          fullScreen\n          open={this.props.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Scan QR Code</DialogTitle>\n          <DialogContent>\n            <Grid container>\n              <Grid item xs={12} sm={4}>\n                <QrReader\n                  delay={100}\n                  resolution={800}\n                  onError={() => {\n                    // do nothing\n                  }}\n                  onScan={(data) => {\n                    if (data) {\n                      let context = null;\n                      const beep = (freq = 520, duration = 200, vol = 100) => {\n                        const oscillator = context.createOscillator();\n                        const gain = context.createGain();\n                        oscillator.connect(gain);\n                        oscillator.frequency.value = freq;\n                        oscillator.type = \"square\";\n                        gain.connect(context.destination);\n                        gain.gain.value = vol * 0.01;\n                        oscillator.start(context.currentTime);\n                        oscillator.stop(context.currentTime + duration * 0.001);\n                      };\n                      context = new AudioContext();\n                      beep(300, 300, 25);\n                      try {\n                        this.setState({\n                          data: data,\n                        });\n                      } catch (e) {\n                        console.error(e);\n                      }\n                    }\n                  }}\n                  style={{ width: \"100%\" }}\n                />\n              </Grid>\n              <Grid item xs={12} sm={8}>\n                <JSONEditor\n                  value={this.state.data}\n                  // style={{ height: \"128px\" }}\n                />\n              </Grid>\n            </Grid>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose}>Cancel</Button>\n            <Button\n              onClick={this.handleSubmit}\n              color=\"primary\"\n              variant=\"contained\"\n            >\n              Proceed\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nScanQRCodeDialog.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n  onSubmit: PropTypes.func,\n};\n","export const resolver = {\n  resolve: (did: string) => {\n    if (did.indexOf('did:key:') !== 0) {\n      throw new Error('did must be of method did:key.');\n    }\n    const idchar: any = did.split('did:key:').pop();\n    const encodedType = idchar.substring(0, 4);\n    switch (encodedType) {\n      case 'z6Mk':\n        return require('@transmute/did-key-ed25519').driver.get({ did });\n      case 'z6LS':\n        return require('@transmute/did-key-x25519').driver.get({ did });\n      case 'zUC7':\n        return require('@transmute/did-key-bls12381').driver.get({ did });\n      case 'zQ3s':\n        return require('@transmute/did-key-secp256k1').driver.get({ did });\n      default:\n        throw new Error('Unknown DID Key type: ' + encodedType);\n    }\n  },\n};\n","import jsonld from \"jsonld\";\n\nimport { resolver } from \"@transmute/did-key.js\";\n\nexport default async (url) => {\n  let maybeCached = localStorage.getItem(url);\n  if (maybeCached) {\n    console.log(\"using cache for: \", url);\n    return {\n      contextUrl: null, // this is for a context via a link header\n      document: JSON.parse(maybeCached), // this is the actual document that was loaded\n      documentUrl: url, // this is the actual context URL after redirects\n    };\n  }\n\n  if (url.indexOf(\"did:key\") !== -1) {\n    const didDocument = await resolver.resolve(url);\n    localStorage.setItem(url, JSON.stringify(didDocument));\n    return {\n      contextUrl: null, // this is for a context via a link header\n      document: didDocument, // this is the actual document that was loaded\n      documentUrl: url, // this is the actual context URL after redirects\n    };\n  }\n\n  try {\n    console.log(\"downloading...\", url);\n    let res = await jsonld.documentLoader(url);\n    localStorage.setItem(url, JSON.stringify(res.document));\n    return res;\n  } catch (e) {\n    console.error(\"No remote context support for \" + url);\n  }\n  throw new Error(\"No custom context support for \" + url);\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\n\nimport { QR } from \"@bloomprotocol/qr-react\";\n\nimport ReactToPdf from \"react-to-pdf\";\n\nimport { Ed25519KeyPair, driver } from \"@transmute/did-key-ed25519\";\nimport { JSONEditor } from \"@transmute/material-did-core\";\n\nimport BasePage from \"../base/base\";\n\nimport { ScanQRCodeDialog } from \"../../components/ScanQRCodeDialog\";\nimport documentLoader from \"../../networking/documentLoader\";\nconst crypto = require(\"crypto\");\nconst vcjs = require(\"vc-js\");\nconst jsigs = require(\"jsonld-signatures\");\nconst { Ed25519Signature2018 } = jsigs.suites;\n\nconst defaultVc = {\n  \"@context\": [\n    \"https://www.w3.org/2018/credentials/v1\",\n    \"https://www.w3.org/2018/credentials/examples/v1\",\n  ],\n  id: \"http://ex.gov/1\",\n  type: [\"VerifiableCredential\"],\n  issuer: \"https://example.edu\",\n  issuanceDate: new Date().toISOString(),\n  credentialSubject: {\n    id: \"did:ex:2\",\n    type: \"BD\",\n    name: \"CyS\",\n  },\n};\n\nconst qrOptions = {\n  ecLevel: \"L\",\n  fgColor: \"#000\",\n  padding: 32,\n  size: 400,\n  hideLogo: true,\n};\n\nconst options = {\n  orientation: \"portrait\",\n  unit: \"px\",\n  format: \"A4\",\n};\n\nconst generatePrivateKey = async () => {\n  const edKey = await Ed25519KeyPair.generate({\n    secureRandom: () => {\n      return crypto.randomBytes(32);\n    },\n  });\n  // console.log(edKey);\n  // window.edKey = edKey;\n  return edKey;\n};\n\nexport const OfflinePDF = () => {\n  const [state, setState] = React.useState({\n    isScanQrCodeDialogOpen: false,\n    key: null,\n    vc: defaultVc,\n    verified: false,\n  });\n  const { isScanQrCodeDialogOpen, key, vc } = state;\n\n  const [panelValues, setPanelValues] = React.useState({\n    panel0: false,\n    panel1: false,\n    panel2: false,\n    panel3: false,\n  });\n\n  const handleChangePanels = (panel) => () => {\n    setPanelValues({\n      ...panelValues,\n      // eslint-disable-next-line\n      [panel]: !panelValues[panel],\n    });\n  };\n\n  const renderKey = () => {\n    if (!key) {\n      return \"\";\n    }\n    return (\n      <ReactToPdf\n        filename=\"did-key-private-key.pdf\"\n        options={options}\n        x={70}\n        y={50}\n      >\n        {({ toPdf, targetRef }) => {\n          window.toPdf = toPdf;\n          return (\n            <React.Fragment>\n              <div\n                style={{\n                  display: \"block\",\n                  padding: \"16px\",\n                  width: \"500px\",\n                  height: \"500px\",\n                  textAlign: \"center\",\n                  margin: \"0 auto\",\n                }}\n                ref={targetRef}\n              >\n                <Typography variant={\"h5\"}>Private Key</Typography>\n                <div>\n                  <QR\n                    data={{\n                      privateKeyBase58: key.privateKeyBase58,\n                      publicKeyBase58: key.publicKeyBase58,\n                    }}\n                    options={qrOptions}\n                  />\n                </div>\n                <Typography variant={\"caption\"}>\n                  {key.controller.split(\":\").pop()}\n                </Typography>\n              </div>\n            </React.Fragment>\n          );\n        }}\n      </ReactToPdf>\n    );\n  };\n\n  const renderVC = () => {\n    if (!vc || !vc.proof) {\n      return \"\";\n    }\n    return (\n      <ReactToPdf\n        filename=\"did-key-verifiable-credential.pdf\"\n        options={options}\n        x={80}\n        y={50}\n      >\n        {({ toPdf, targetRef }) => {\n          window.toPdf = toPdf;\n\n          return (\n            <React.Fragment>\n              <div\n                style={{\n                  display: \"block\",\n                  padding: \"16px\",\n                  width: \"500px\",\n                  height: \"500px\",\n                  textAlign: \"center\",\n                  margin: \"0 auto\",\n                  // marginBottom: \"-100px\",\n                }}\n                ref={targetRef}\n              >\n                <Typography variant={\"h5\"}>Credential</Typography>\n                <div>\n                  <QR data={vc} options={{ ...qrOptions, padding: 8 }} />\n                </div>\n                <Typography variant={\"caption\"}>{vc.id}</Typography>\n              </div>\n            </React.Fragment>\n          );\n        }}\n      </ReactToPdf>\n    );\n  };\n\n  const renderVerify = (vc) => {\n    if (!vc.proof) {\n      return \"\";\n    }\n    return (\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={6}>\n          <JSONEditor jsonObject={vc} onChange={(data) => {}} />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          {renderVC(vc)}\n        </Grid>\n        <Grid item xs={12}>\n          <Typography>Verified: {JSON.stringify(state.verified)}</Typography>\n        </Grid>\n      </Grid>\n    );\n  };\n\n  return (\n    <BasePage>\n      <ExpansionPanel\n        // eslint-disable-next-line\n        expanded={panelValues[\"panel0\"]}\n        onChange={handleChangePanels(\"panel0\")}\n        // style={{ maxWidth: \"500px\" }}\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls={`panel0-content`}\n          id={`panel0-header`}\n        >\n          <Typography>Create DID</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails style={{ flexDirection: \"column\" }}>\n          {renderKey()}\n          <Button\n            variant={\"contained\"}\n            style={{ marginBottom: \"32px\" }}\n            onClick={async () => {\n              const key = await generatePrivateKey();\n              setState({\n                ...state,\n                key,\n                vc: {\n                  ...state.vc,\n                  issuer: key.controller,\n                },\n              });\n              setTimeout(() => {\n                window.toPdf();\n              }, 1 * 1000);\n            }}\n          >\n            Create a DID Key\n          </Button>\n          <Typography>\n            <i>\n              Remember to print your key and store it in a private and secure\n              location.\n            </i>\n          </Typography>\n          <br />\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n\n      <ExpansionPanel\n        // eslint-disable-next-line\n        expanded={panelValues[\"panel1\"]}\n        onChange={handleChangePanels(\"panel1\")}\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls={`panel1-content`}\n          id={`panel1-header`}\n        >\n          <Typography>Import DID</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails style={{ flexDirection: \"column\" }}>\n          <Typography gutterBottom>\n            You must have a QR Code with an embedded crypto-ld private key to\n            use this method of import.\n          </Typography>\n          <Button\n            variant={\"contained\"}\n            color={\"secondary\"}\n            onClick={() => {\n              setState({\n                ...state,\n                isScanQrCodeDialogOpen: true,\n              });\n            }}\n          >\n            Scan QR Code\n          </Button>\n          <ScanQRCodeDialog\n            open={isScanQrCodeDialogOpen}\n            onSubmit={async (data) => {\n              const terrible = JSON.parse(data);\n              if (terrible.proof) {\n                const suite = new Ed25519Signature2018({});\n                const result = await vcjs.verify({\n                  credential: terrible,\n                  documentLoader: documentLoader,\n                  suite,\n                });\n                setState({\n                  ...state,\n                  vc: data,\n                  verified: result.verified,\n                  isScanQrCodeDialogOpen: false,\n                });\n              } else {\n                const edKey = await Ed25519KeyPair.from({\n                  ...terrible,\n                });\n                const doc = driver.keyToDidDoc(edKey);\n                const key1 = {\n                  id: doc.publicKey[0].id,\n                  type: edKey.type,\n                  controller: doc.id,\n                  privateKeyBase58: edKey.privateKeyBase58,\n                  publicKeyBase58: edKey.publicKeyBase58,\n                };\n                setState({\n                  ...state,\n                  key: key1,\n                  vc: {\n                    ...state.vc,\n                    issuer: key1.controller,\n                  },\n                  isScanQrCodeDialogOpen: false,\n                });\n              }\n            }}\n            onClose={() => {\n              setState({\n                ...state,\n                isScanQrCodeDialogOpen: false,\n              });\n            }}\n          />\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n\n      <ExpansionPanel\n        // eslint-disable-next-line\n        expanded={panelValues[\"panel3\"]}\n        onChange={handleChangePanels(\"panel3\")}\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls={`panel3-content`}\n          id={`panel3-header`}\n        >\n          <Typography>Import Credential</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails style={{ flexDirection: \"column\" }}>\n          {renderVerify(vc)}\n\n          <Button\n            variant={\"contained\"}\n            color={\"secondary\"}\n            onClick={() => {\n              setState({\n                ...state,\n                isScanQrCodeDialogOpen: true,\n              });\n            }}\n          >\n            Scan Credential to Verify\n          </Button>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n\n      <ExpansionPanel\n        // eslint-disable-next-line\n        expanded={panelValues[\"panel2\"]}\n        disabled={!key}\n        onChange={handleChangePanels(\"panel2\")}\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls={`panel2-content`}\n          id={`panel2-header`}\n        >\n          <Typography>Create Credential</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails style={{ flexDirection: \"column\" }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <JSONEditor\n                value={JSON.stringify(vc, null, 2)}\n                onChange={(data) => {\n                  setState({\n                    ...state,\n                    vc: JSON.parse(data),\n                  });\n                }}\n                style={{ height: \"435px\", marginBottom: \"16px\" }}\n              />\n              <Button\n                variant={\"contained\"}\n                onClick={async () => {\n                  console.log(key);\n                  let suite = new Ed25519Signature2018({\n                    key,\n                  });\n                  const signed = await vcjs.issue({\n                    credential: {\n                      ...vc,\n                      issuer: key.controller,\n                    },\n                    suite,\n                    // documentLoader\n                  });\n                  setState({\n                    ...state,\n                    vc: signed,\n                  });\n                  setTimeout(() => {\n                    window.toPdf();\n                  }, 1 * 1000);\n                }}\n              >\n                Create Credential\n              </Button>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              {renderVC(vc)}\n            </Grid>\n          </Grid>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </BasePage>\n  );\n};\n\nOfflinePDF.propTypes = {\n  wallet: PropTypes.any,\n};\n","import React from \"react\";\n\nimport { compose } from \"redux\";\n\nimport { OfflinePDF } from \"./OfflinePDF\";\n\nimport wallet from \"../../store/universal-wallet\";\n\nconst container = compose(wallet.container);\n\nexport const PdfDemo = container((props) => {\n  return <OfflinePDF {...props} />;\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Base from \"../base/base\";\n\nexport const Videos = (props) => {\n  return (\n    <Base>\n      <Typography variant={\"h5\"} gutterBottom>\n        Videos\n      </Typography>\n      <Grid container spacing={4}>\n        <Grid item xs={12} sm={6}>\n          <Typography style={{ marginTop: \"32px\" }} variant={\"h6\"} gutterBottom>\n            Offline Demo\n          </Typography>\n          <iframe\n            title=\"intro video\"\n            width=\"560\"\n            height=\"315\"\n            src=\"https://www.youtube.com/embed/-i4am8LoV7s\"\n            frameborder=\"0\"\n            allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n            allowfullscreen\n          ></iframe>\n\n          <Typography style={{ marginTop: \"32px\" }}>\n            DID Resolution, Credential Issuance and Verification, powered by\n            Progressive Web Applications, PDFs, QR Codes and printed paper.\n          </Typography>\n        </Grid>\n      </Grid>\n    </Base>\n  );\n};\n\nVideos.propTypes = {\n  wallet: PropTypes.any,\n};\n","import { Home } from \"./home\";\nimport { Workbench } from \"./workbench\";\nimport { PdfDemo } from \"./pdf\";\nimport { Videos } from \"./videos\";\n\nexport const routes = [\n  { path: \"/\", exact: true, component: Home },\n  { path: \"/workbench\", exact: true, component: Workbench },\n  { path: \"/offline\", exact: true, component: PdfDemo },\n  { path: \"/videos\", exact: true, component: Videos },\n];\n","import React from \"react\";\nimport { Videos as Page } from \"./Videos\";\n\nimport { compose } from \"redux\";\n\nimport wallet from \"../../store/universal-wallet\";\n\nconst container = compose(wallet.container);\n\nexport const Videos = container((props) => {\n  return <Page {...props} />;\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Particles from 'react-particles-js';\n\nexport class ParticlesContainer extends Component {\n  render() {\n    const params = this.props.params || {\n      particles: {\n        line_linked: {\n          shadow: {\n            enable: true,\n            color: '#3CA9D1',\n            blur: 5,\n          },\n        },\n      },\n    };\n    return (\n      <React.Fragment>\n        <div\n          style={{\n            zIndex: 2,\n            position: 'absolute',\n          }}\n        >\n          {this.props.children}\n        </div>\n\n        <Particles\n          className=\"Particles\"\n          style={{\n            zIndex: 1,\n            top: 0,\n            position: 'absolute',\n          }}\n          params={params}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nParticlesContainer.propTypes = {\n  params: PropTypes.object,\n  children: PropTypes.any,\n};\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Theme from '../../components/Theme/Theme';\n\nimport { ParticlesContainer } from '../../components/ParticlesContainer';\n\nimport './404.css';\n\nexport class NotFound extends Component {\n  render() {\n    return (\n      <Theme>\n        <div className=\"notFound\">\n          <ParticlesContainer>\n            <div className=\"copy\" style={{ padding: '32px' }}>\n              <Typography variant=\"h1\">404</Typography>\n              <Typography>\n                {window.location.pathname} page not found.\n              </Typography>\n              <br />\n              <Button\n                variant=\"contained\"\n                color={'secondary'}\n                onClick={() => {\n                  window.location.href = '/workbench';\n                }}\n              >\n                Go Home\n              </Button>\n            </div>\n          </ParticlesContainer>\n        </div>\n      </Theme>\n    );\n  }\n}\n\nexport default NotFound;\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport storage from \"redux-persist/lib/storage\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport withReduxEnhancer from \"addon-redux/enhancer\";\n\nimport rootReducer from \".\";\nimport history from \"./history\";\n\nexport default (appReducers = {}) => {\n  // Persistance configuration\n  const persistConfig = {\n    key: \"root\",\n    whitelist: [\"wallet\"],\n    storage,\n  };\n\n  const middlewares = [thunk, routerMiddleware(history)];\n\n  // TODO: refactor for production\n  if (process.env.NODE_ENV !== \"production\") {\n    // const reduxListener = createStorybookListener();\n    // middlewares.push(reduxListener);\n  }\n\n  // Store.\n  const store = createStore(\n    persistReducer(\n      persistConfig,\n      combineReducers({ ...rootReducer, ...appReducers })\n    ),\n    composeWithDevTools(\n      compose(applyMiddleware(...middlewares), withReduxEnhancer)\n    )\n  );\n\n  // Persistor.\n  const persistor = persistStore(store);\n  return {\n    store,\n    persistor,\n    history,\n  };\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport { Switch, Route } from \"react-router-dom\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/lib/integration/react\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport createStore from \"./store/create\";\n\nimport { routes } from \"./pages\";\n\nimport { NotFound } from \"./pages/errors/404\";\n\nconst { store, persistor, history } = createStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <ConnectedRouter history={history}>\n        <Switch>\n          {routes.map(({ exact, path, component }) => (\n            <Route key={path} exact={exact} path={path} component={component} />\n          ))}\n          <Route path=\"*\" render={() => <NotFound />} />\n        </Switch>\n      </ConnectedRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nconsole.log(\n  `\nHello Developer 🧙‍♂️! \nCheckout our corporate website if you are interested in working with us: \n✨ https://www.transmute.industries/\n`\n);\n","import base64url from 'base64url';\n\nimport * as ed25519 from '@stablelib/ed25519';\n\nimport canonicalize from 'canonicalize';\n\nclass JWSVerificationFailed extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'JWSVerificationFailed';\n  }\n}\n\nconst _jwkToSecretKey = (jwk: any) => {\n  const d = base64url.toBuffer(jwk.d);\n  const x = base64url.toBuffer(jwk.x);\n  const secretKey = new Uint8Array(Buffer.concat([d, x]));\n  return secretKey;\n};\n\nconst _jwkToPublicKey = (jwk: any) => {\n  const x = base64url.toBuffer(jwk.x);\n  const publicKey = new Uint8Array(x);\n  return publicKey;\n};\n\nexport const decode = (jws: string, options = { complete: false }) => {\n  const [encodedHeader, encodedPayload, encodedSignature] = jws.split('.');\n\n  if (options.complete) {\n    return {\n      header: JSON.parse(base64url.decode(encodedHeader)),\n      payload: JSON.parse(base64url.decode(encodedPayload)),\n      signature: encodedSignature,\n    };\n  }\n  return JSON.parse(base64url.decode(encodedPayload));\n};\n\nexport const sign = (\n  payload: any,\n  privateKeyJwk: any,\n  header: any = {\n    alg: 'EdDSA',\n  }\n) => {\n  const secretKey = _jwkToSecretKey(privateKeyJwk);\n  const encodedHeader = base64url.encode(canonicalize(header));\n  const encodedPayload = base64url.encode(canonicalize(payload));\n  const message = new Uint8Array(\n    Buffer.from(`${encodedHeader}.${encodedPayload}`)\n  );\n  const signature = ed25519.sign(secretKey, message);\n  const encodedSignature = base64url.encode(Buffer.from(signature));\n  const jws = `${encodedHeader}.${encodedPayload}.${encodedSignature}`;\n  return jws;\n};\n\nexport const signDetached = (\n  payload: Buffer,\n  privateKeyJwk: any,\n  header: any = {\n    alg: 'EdDSA',\n  }\n) => {\n  const secretKey = _jwkToSecretKey(privateKeyJwk);\n  const encodedHeader = base64url.encode(canonicalize(header));\n  const message = new Uint8Array(\n    Buffer.concat([\n      Buffer.from(encodedHeader, 'utf-8'),\n      Buffer.from('.', 'utf-8'),\n      payload,\n    ])\n  );\n  const signature = ed25519.sign(secretKey, message);\n  const encodedSignature = base64url.encode(Buffer.from(signature));\n  const jws = `${encodedHeader}..${encodedSignature}`;\n  return jws;\n};\n\nexport const verify = (jws: string, publicKeyJwk: any) => {\n  const publicKey = _jwkToPublicKey(publicKeyJwk);\n  const [encodedHeader, encodedPayload, encodedSignature] = jws.split('.');\n\n  const message = new Uint8Array(\n    Buffer.from(`${encodedHeader}.${encodedPayload}`)\n  );\n  const verified = ed25519.verify(\n    publicKey,\n    message,\n    new Uint8Array(base64url.toBuffer(encodedSignature))\n  );\n\n  if (verified) {\n    return JSON.parse(base64url.decode(encodedPayload));\n  }\n\n  throw new JWSVerificationFailed('signature verification failed');\n};\n\nexport const verifyDetached = (\n  jws: string,\n  payload: Buffer,\n  publicKeyJwk: any\n) => {\n  const publicKey = _jwkToPublicKey(publicKeyJwk);\n  const [encodedHeader, encodedSignature] = jws.split('..');\n  const message = new Uint8Array(\n    Buffer.concat([\n      Buffer.from(encodedHeader, 'utf-8'),\n      Buffer.from('.', 'utf-8'),\n      payload,\n    ])\n  );\n  const verified = ed25519.verify(\n    publicKey,\n    message,\n    new Uint8Array(base64url.toBuffer(encodedSignature))\n  );\n  return verified;\n};\n\nexport default {\n  decode,\n\n  sign,\n  signDetached,\n\n  verify,\n  verifyDetached,\n};\n","import bs58 from 'bs58';\n\nimport * as ed25519 from '@stablelib/ed25519';\nimport * as keyUtils from './keyUtils';\n\nimport { X25519KeyPair } from '@transmute/did-key-x25519';\n\nexport class Ed25519KeyPair {\n  public id: string;\n  public type: string;\n  public controller: string;\n  public publicKeyBase58: string;\n  public privateKeyBase58: string;\n\n  static fingerprintFromPublicKey({ publicKeyBase58 }: any) {\n    // ed25519 cryptonyms are multicodec encoded values, specifically:\n    // (multicodec ed25519-pub 0xed01 + key bytes)\n    const pubkeyBytes = bs58.decode(publicKeyBase58);\n    const buffer = new Uint8Array(2 + pubkeyBytes.length);\n    buffer[0] = 0xed;\n    buffer[1] = 0x01;\n    buffer.set(pubkeyBytes, 2);\n    // prefix with `z` to indicate multi-base base58btc encoding\n    return `z${bs58.encode(buffer)}`;\n  }\n  static async generate(options: any = {}) {\n    let key;\n    if (options.secureRandom) {\n      key = ed25519.generateKeyPair({\n        isAvailable: true,\n        randomBytes: options.secureRandom,\n      });\n    }\n\n    if (options.seed) {\n      key = ed25519.generateKeyPair({\n        isAvailable: true,\n        randomBytes: () => {\n          return Buffer.from(options.seed, 'hex');\n        },\n      });\n    }\n\n    if (!key) {\n      throw new Error('options.seed or options.secureRandom is required.');\n    }\n\n    const publicKeyBase58 = bs58.encode(key.publicKey);\n    const privateKeyBase58 = bs58.encode(key.secretKey);\n\n    const did = `did:key:${Ed25519KeyPair.fingerprintFromPublicKey({\n      publicKeyBase58,\n    })}`;\n    const keyId = `#${Ed25519KeyPair.fingerprintFromPublicKey({\n      publicKeyBase58,\n    })}`;\n    return new Ed25519KeyPair({\n      id: keyId,\n      controller: did,\n      publicKeyBase58,\n      privateKeyBase58,\n    });\n  }\n\n  static fromFingerprint({ fingerprint }: any) {\n    // skip leading `z` that indicates base58 encoding\n    const buffer = bs58.decode(fingerprint.substr(1));\n    // https://github.com/multiformats/multicodec/blob/master/table.csv#L81\n    if (buffer[0] === 0xed && buffer[1] === 0x01) {\n      const publicKeyBase58 = bs58.encode(buffer.slice(2));\n      const did = `did:key:${Ed25519KeyPair.fingerprintFromPublicKey({\n        publicKeyBase58,\n      })}`;\n      const keyId = `#${Ed25519KeyPair.fingerprintFromPublicKey({\n        publicKeyBase58,\n      })}`;\n      return new Ed25519KeyPair({\n        id: keyId,\n        controller: did,\n        publicKeyBase58,\n      });\n    }\n\n    throw new Error(`Unsupported Fingerprint Type: ${fingerprint}`);\n  }\n  static async from(options: any) {\n    let privateKeyBase58 = options.privateKeyBase58;\n    let publicKeyBase58 = options.publicKeyBase58;\n\n    if (options.privateKeyHex) {\n      privateKeyBase58 = keyUtils.privateKeyBase58FromPrivateKeyHex(\n        options.privateKeyHex\n      );\n    }\n\n    if (options.publicKeyHex) {\n      publicKeyBase58 = keyUtils.publicKeyBase58FromPublicKeyHex(\n        options.publicKeyHex\n      );\n    }\n\n    if (options.privateKeyJwk) {\n      privateKeyBase58 = keyUtils.privateKeyBase58FromPrivateKeyJwk(\n        options.privateKeyJwk\n      );\n    }\n\n    if (options.publicKeyJwk) {\n      publicKeyBase58 = keyUtils.publicKeyBase58FromPublicKeyJwk(\n        options.publicKeyJwk\n      );\n    }\n\n    return new Ed25519KeyPair({\n      ...options,\n      privateKeyBase58,\n      publicKeyBase58,\n    });\n  }\n\n  constructor(options: any = {}) {\n    this.type = 'Ed25519VerificationKey2018';\n    this.id = options.id;\n    this.controller = options.controller;\n    this.publicKeyBase58 = options.publicKeyBase58;\n    this.privateKeyBase58 = options.privateKeyBase58;\n    if (this.controller && !this.id) {\n      this.id = `${this.controller}#${this.fingerprint()}`;\n    }\n  }\n\n  get publicKey() {\n    return this.publicKeyBase58;\n  }\n\n  get privateKey() {\n    return this.privateKeyBase58;\n  }\n  addEncodedPublicKey(publicKeyNode: any) {\n    publicKeyNode.publicKeyBase58 = this.publicKeyBase58;\n    return publicKeyNode;\n  }\n\n  public publicNode({controller = this.controller}:any = {}) {\n    const publicNode:any = {\n      id: this.id,\n      type: this.type,\n    };\n    if(controller) {\n      publicNode.controller = controller;\n    }\n   \n    this.addEncodedPublicKey(publicNode); // Subclass-specific\n    return publicNode;\n  }\n\n  fingerprint() {\n    const { publicKeyBase58 } = this;\n    return Ed25519KeyPair.fingerprintFromPublicKey({ publicKeyBase58 });\n  }\n  verifyFingerprint(fingerprint: any) {\n    // fingerprint should have `z` prefix indicating\n    // that it's multi-base encoded\n    if (!(typeof fingerprint === 'string' && fingerprint[0] === 'z')) {\n      return {\n        error: new Error('`fingerprint` must be a multibase encoded string.'),\n        valid: false,\n      };\n    }\n    let fingerprintBuffer;\n    try {\n      fingerprintBuffer = bs58.decode(fingerprint.slice(1));\n    } catch (e) {\n      return { error: e, valid: false };\n    }\n    let publicKeyBuffer;\n    try {\n      publicKeyBuffer = bs58.decode(this.publicKeyBase58);\n    } catch (e) {\n      return { error: e, valid: false };\n    }\n\n    // validate the first two multicodec bytes 0xed01\n    const valid =\n      fingerprintBuffer.slice(0, 2).toString('hex') === 'ed01' &&\n      publicKeyBuffer.equals(fingerprintBuffer.slice(2));\n    if (!valid) {\n      return {\n        error: new Error('The fingerprint does not match the public key.'),\n        valid: false,\n      };\n    }\n    return { valid };\n  }\n\n  async toJwk(_private: boolean = false) {\n    if (_private) {\n      return keyUtils.privateKeyJwkFromPrivateKeyBase58(this.privateKeyBase58);\n    }\n    return keyUtils.publicKeyJwkFromPublicKeyBase58(this.publicKeyBase58);\n  }\n\n  async toHex(_private: boolean = false) {\n    if (_private) {\n      return keyUtils.privateKeyHexFromPrivateKeyBase58(this.privateKeyBase58);\n    }\n    return keyUtils.publicKeyHexFromPublicKeyBase58(this.publicKeyBase58);\n  }\n\n  toX25519KeyPair(_private: boolean = false) {\n    const x25519 = X25519KeyPair.fromEdKeyPair({\n      controller: this.controller,\n      publicKeyBase58: this.publicKeyBase58,\n      privateKeyBase58: this.privateKeyBase58,\n    });\n    if (!_private) {\n      delete x25519.privateKeyBase58;\n    }\n    return x25519;\n  }\n\n  signer() {\n    if (!this.privateKeyBase58) {\n      return {\n        async sign() {\n          throw new Error('No private key to sign with.');\n        },\n      };\n    }\n    let privateKeyBase58 = this.privateKeyBase58;\n    return {\n      async sign({ data }: any) {\n        const signatureUInt8Array = ed25519.sign(\n          bs58.decode(privateKeyBase58),\n          data\n        );\n        return signatureUInt8Array;\n      },\n    };\n  }\n  verifier() {\n    if (!this.publicKeyBase58) {\n      return {\n        async sign() {\n          throw new Error('No public key to verify with.');\n        },\n      };\n    }\n    let publicKeyBase58 = this.publicKeyBase58;\n    return {\n      async verify({ data, signature }: any) {\n        let verified = false;\n        try {\n          verified = ed25519.verify(\n            bs58.decode(publicKeyBase58),\n            data,\n            signature\n          );\n        } catch (e) {\n          console.error('An error occurred when verifying signature: ', e);\n        }\n        return verified;\n      },\n    };\n  }\n}\n","import bs58 from 'bs58';\nimport {\n  convertPublicKeyToX25519,\n  convertSecretKeyToX25519,\n} from '@stablelib/ed25519';\nimport * as x25519 from '@stablelib/x25519';\nimport * as keyUtils from './keyUtils';\nexport class X25519KeyPair {\n  public id: string;\n  public type: string;\n  public controller: string;\n  public publicKeyBase58: string;\n  public privateKeyBase58: string;\n\n  static fingerprintFromPublicKey({ publicKeyBase58 }: any) {\n    // https://github.com/multiformats/multicodec/blob/master/table.csv#L80\n    const pubkeyBytes = bs58.decode(publicKeyBase58);\n    const buffer = new Uint8Array(2 + pubkeyBytes.length);\n    buffer[0] = 0xec;\n    buffer[1] = 0x01;\n    buffer.set(pubkeyBytes, 2);\n    // prefix with `z` to indicate multi-base base58btc encoding\n    return `z${bs58.encode(buffer)}`;\n  }\n  static async generate(options: any = {}) {\n    let key;\n    if (options.secureRandom) {\n      key = x25519.generateKeyPair({\n        isAvailable: true,\n        randomBytes: options.secureRandom,\n      });\n    }\n\n    if (options.seed) {\n      key = x25519.generateKeyPair({\n        isAvailable: true,\n        randomBytes: () => {\n          return Buffer.from(options.seed, 'hex');\n        },\n      });\n    }\n\n    if (!key) {\n      throw new Error('options.seed or options.secureRandom is required.');\n    }\n\n    const publicKeyBase58 = bs58.encode(key.publicKey);\n    const privateKeyBase58 = bs58.encode(key.secretKey);\n\n    const did = `did:key:${X25519KeyPair.fingerprintFromPublicKey({\n      publicKeyBase58,\n    })}`;\n    const keyId = `#${X25519KeyPair.fingerprintFromPublicKey({\n      publicKeyBase58,\n    })}`;\n    return new X25519KeyPair({\n      id: keyId,\n      controller: did,\n      publicKeyBase58,\n      privateKeyBase58,\n    });\n  }\n\n  static fromFingerprint({ fingerprint }: any) {\n    // skip leading `z` that indicates base58 encoding\n    const buffer = bs58.decode(fingerprint.substr(1));\n    // https://github.com/multiformats/multicodec/blob/master/table.csv#L80\n    if (buffer[0] === 0xec && buffer[1] === 0x01) {\n      const publicKeyBase58 = bs58.encode(buffer.slice(2));\n      const did = `did:key:${X25519KeyPair.fingerprintFromPublicKey({\n        publicKeyBase58,\n      })}`;\n      const keyId = `#${X25519KeyPair.fingerprintFromPublicKey({\n        publicKeyBase58,\n      })}`;\n      return new X25519KeyPair({\n        id: keyId,\n        controller: did,\n        publicKeyBase58,\n      });\n    }\n\n    throw new Error(`Unsupported Fingerprint Type: ${fingerprint}`);\n  }\n\n  static fromEdKeyPair(ed25519KeyPair: any) {\n    let publicKeyBase58;\n    let privateKeyBase58;\n    if (ed25519KeyPair.publicKeyBase58) {\n      publicKeyBase58 = bs58.encode(\n        convertPublicKeyToX25519(bs58.decode(ed25519KeyPair.publicKeyBase58))\n      );\n    }\n    if (ed25519KeyPair.privateKeyBase58) {\n      privateKeyBase58 = bs58.encode(\n        convertSecretKeyToX25519(bs58.decode(ed25519KeyPair.privateKeyBase58))\n      );\n    }\n\n    return X25519KeyPair.from({\n      controller: ed25519KeyPair.controller,\n      publicKeyBase58,\n      privateKeyBase58,\n    });\n  }\n\n  static from(options: any) {\n    let privateKeyBase58 = options.privateKeyBase58;\n    let publicKeyBase58 = options.publicKeyBase58;\n\n    if (options.privateKeyHex) {\n      privateKeyBase58 = keyUtils.privateKeyBase58FromPrivateKeyHex(\n        options.privateKeyHex\n      );\n    }\n\n    if (options.publicKeyHex) {\n      publicKeyBase58 = keyUtils.publicKeyBase58FromPublicKeyHex(\n        options.publicKeyHex\n      );\n    }\n\n    if (options.privateKeyJwk) {\n      privateKeyBase58 = keyUtils.privateKeyBase58FromPrivateKeyJwk(\n        options.privateKeyJwk\n      );\n    }\n\n    if (options.publicKeyJwk) {\n      publicKeyBase58 = keyUtils.publicKeyBase58FromPublicKeyJwk(\n        options.publicKeyJwk\n      );\n    }\n\n    return new X25519KeyPair({\n      ...options,\n      privateKeyBase58,\n      publicKeyBase58,\n    });\n  }\n\n  constructor(options: any = {}) {\n    this.type = 'X25519KeyAgreementKey2019';\n    this.id = options.id;\n    this.controller = options.controller;\n    this.publicKeyBase58 = options.publicKeyBase58;\n    this.privateKeyBase58 = options.privateKeyBase58;\n    if (!this.id) {\n      this.id = `#${this.fingerprint()}`;\n    }\n  }\n\n  get publicKey() {\n    return this.publicKeyBase58;\n  }\n\n  get privateKey() {\n    return this.privateKeyBase58;\n  }\n  addEncodedPublicKey(publicKeyNode: any) {\n    publicKeyNode.publicKeyBase58 = this.publicKeyBase58;\n    return publicKeyNode;\n  }\n\n  fingerprint() {\n    const { publicKeyBase58 } = this;\n    return X25519KeyPair.fingerprintFromPublicKey({ publicKeyBase58 });\n  }\n  verifyFingerprint(fingerprint: any) {\n    // fingerprint should have `z` prefix indicating\n    // that it's multi-base encoded\n    if (!(typeof fingerprint === 'string' && fingerprint[0] === 'z')) {\n      return {\n        error: new Error('`fingerprint` must be a multibase encoded string.'),\n        valid: false,\n      };\n    }\n    let fingerprintBuffer;\n    try {\n      fingerprintBuffer = bs58.decode(fingerprint.slice(1));\n    } catch (e) {\n      return { error: e, valid: false };\n    }\n    let publicKeyBuffer;\n    try {\n      publicKeyBuffer = bs58.decode(this.publicKeyBase58);\n    } catch (e) {\n      return { error: e, valid: false };\n    }\n\n    // validate the first two multicodec bytes 0xec01\n    // https://github.com/multiformats/multicodec/blob/master/table.csv#L80\n    const valid =\n      fingerprintBuffer.slice(0, 2).toString('hex') === 'ec01' &&\n      publicKeyBuffer.equals(fingerprintBuffer.slice(2));\n    if (!valid) {\n      return {\n        error: new Error('The fingerprint does not match the public key.'),\n        valid: false,\n      };\n    }\n    return { valid };\n  }\n\n  async toJwk(_private: boolean = false) {\n    if (_private) {\n      return keyUtils.privateKeyJwkFromPrivateKeyBase58(\n        this.publicKeyBase58,\n        this.privateKeyBase58\n      );\n    }\n    return keyUtils.publicKeyJwkFromPublicKeyBase58(this.publicKeyBase58);\n  }\n\n  async toHex(_private: boolean = false) {\n    if (_private) {\n      return keyUtils.privateKeyHexFromPrivateKeyBase58(this.privateKeyBase58);\n    }\n    return keyUtils.publicKeyHexFromPublicKeyBase58(this.publicKeyBase58);\n  }\n\n  deriveSecret({ publicKey }: any) {\n    const remotePubkeyBytes = bs58.decode(publicKey.publicKeyBase58);\n    const privateKeyBytes = bs58.decode(this.privateKeyBase58);\n\n    const scalarMultipleResult = x25519.sharedKey(\n      new Uint8Array(privateKeyBytes),\n      new Uint8Array(remotePubkeyBytes),\n      true\n    );\n\n    return scalarMultipleResult;\n    // // hashing may be optional here...\n    // // https://github.com/digitalbazaar/edv-client/issues/64\n    // const key = crypto\n    //   .createHash('sha256')\n    //   .update(scalarMultipleResult)\n    //   .digest();\n    // expect(key.toString('hex')).toEqual(fixtures.sharedKey);\n  }\n}\n","import { withHandlers } from \"recompose\";\nimport { EdvClient } from \"edv-client\";\nimport { UniversalWallet2020, VaultClient } from \"@transmute/universal-wallet\";\n\n// correct horse battery staple\n\nconst getClient = async (wallet) => {\n  let _wallet = new UniversalWallet2020(wallet.contents);\n  const entropy = _wallet.contents.find((c) => {\n    return c.type === \"Entropy\";\n  });\n  const ed25519Key = _wallet.contents.find((c) => {\n    return c.type === \"Ed25519VerificationKey2018\";\n  });\n  ed25519Key.controller = ed25519Key.id.split(\"#\")[0];\n  const x25519Key = _wallet.contents.find((c) => {\n    return c.type === \"X25519KeyAgreementKey2019\";\n  });\n  x25519Key.controller = x25519Key.id.split(\"#\")[0];\n  let client = await VaultClient.fromDerivedContents(\n    wallet.vaultEndpoint,\n    ed25519Key,\n    x25519Key,\n    Buffer.from(entropy.value, \"hex\")\n  );\n  return client;\n};\n\nconst isContentPersisted = (localContents, id) => {\n  return (\n    localContents.find((c) => {\n      return c.id === id;\n    }) !== undefined\n  );\n};\n\nexport default withHandlers({\n  setUniversalWalletProp: ({ setUniversalWalletProp }) => (payload) => {\n    setUniversalWalletProp(payload);\n  },\n  generateWallet: ({ setUniversalWalletProp }) => async (_seed) => {\n    if (!_seed) {\n      throw new Error(\"seed is required.\");\n    }\n    let wallet = await UniversalWallet2020.generate(_seed);\n    setUniversalWalletProp({\n      status: wallet.status,\n      contents: wallet.contents,\n    });\n  },\n  toggleLockStatus: ({ setUniversalWalletProp }) => async ({\n    status,\n    password,\n    contents,\n  }) => {\n    let wallet = new UniversalWallet2020(contents);\n    wallet.status = status;\n\n    if (status === \"LOCKED\") {\n      await wallet.unlock(password);\n    }\n    if (status === \"UNLOCKED\") {\n      await wallet.lock(password);\n    }\n    setUniversalWalletProp({\n      status: wallet.status,\n      contents: wallet.contents,\n    });\n  },\n\n  deleteWallet: ({ setUniversalWalletProp }) => async () => {\n    setUniversalWalletProp({\n      status: \"UNLOCKED\",\n      contents: [],\n    });\n  },\n\n  importWallet: ({ setUniversalWalletProp }) => async (encryptedWallet) => {\n    let wallet = new UniversalWallet2020();\n    await wallet.import(encryptedWallet);\n    setUniversalWalletProp({\n      status: wallet.status,\n      contents: wallet.contents,\n    });\n  },\n\n  exportWallet: () => async (status, contents) => {\n    if (status !== \"LOCKED\") {\n      throw new Error(\"Cannot export unlocked wallet.\");\n    }\n    let wallet = new UniversalWallet2020(contents);\n    wallet.status = status;\n    return wallet.export();\n  },\n\n  saveWallet: ({ setUniversalWalletProp }) => async (contents) => {\n    setUniversalWalletProp({\n      contents,\n    });\n  },\n  issueCredential: ({ wallet, setUniversalWalletProp }) => async ({\n    credential,\n    options,\n  }) => {\n    let _wallet = new UniversalWallet2020(wallet.contents);\n    const verifiableCredential = await _wallet.issue({\n      credential,\n      options,\n    });\n    setUniversalWalletProp({\n      contents: [verifiableCredential, ..._wallet.contents],\n    });\n  },\n  proveVerifiableCredential: ({ wallet, setUniversalWalletProp }) => async ({\n    verifiableCredential,\n    options,\n  }) => {\n    let _wallet = new UniversalWallet2020(wallet.contents);\n    const verifiablePresentation = await _wallet.prove({\n      verifiableCredential,\n      options,\n    });\n    setUniversalWalletProp({\n      contents: [verifiablePresentation, ..._wallet.contents],\n    });\n  },\n  syncVault: ({ wallet, setUniversalWalletProp }) => async () => {\n    setUniversalWalletProp({\n      isSyncing: true,\n    });\n    const client = await getClient(wallet);\n\n    let contents = [];\n    try {\n      contents = await client.getWalletContents();\n    } catch (e) {\n      console.log(e);\n      if (e.message === \"Request failed with status code 404\") {\n        // no-op we will add content that does not existt anyway..\n      }\n    }\n    // console.log('remote wallet contents: ', contents);\n\n    for (const content of wallet.contents) {\n      // console.log({ content });\n      const isPersisted = isContentPersisted(contents, content.id);\n      // console.log({ isPersisted });\n      if (!isPersisted) {\n        let data = JSON.parse(JSON.stringify(content));\n        delete data.tableData;\n        const doc = {\n          id: await EdvClient.generateId(),\n          content: {\n            schema: \"https://schema.org/UniversalWallet\",\n            data,\n          },\n        };\n        await client.addWalletContent(doc);\n        // console.log({ response });\n      }\n    }\n\n    contents = await client.getWalletContents();\n    setUniversalWalletProp({\n      isSyncing: false,\n      contents,\n    });\n  },\n});\n","module.exports = __webpack_public_path__ + \"static/media/logo.33b194d8.svg\";"],"sourceRoot":""}